import { createStitches, PropertyValue, CSS } from '@stitches/react';
import {
    gray,
    mauve,
    slate,
    sage,
    olive,
    sand,
    tomato,
    red,
    crimson,
    pink,
    plum,
    purple,
    violet,
    indigo,
    blue,
    sky,
    mint,
    cyan,
    teal,
    green,
    grass,
    lime,
    yellow,
    amber,
    orange,
    brown,
    bronze,
    gold,
    grayA,
    mauveA,
    slateA,
    sageA,
    oliveA,
    sandA,
    tomatoA,
    redA,
    crimsonA,
    pinkA,
    plumA,
    purpleA,
    violetA,
    indigoA,
    blueA,
    skyA,
    mintA,
    cyanA,
    tealA,
    greenA,
    grassA,
    limeA,
    yellowA,
    amberA,
    orangeA,
    brownA,
    bronzeA,
    goldA,
    whiteA,
    blackA,
    grayDark,
    mauveDark,
    slateDark,
    sageDark,
    oliveDark,
    sandDark,
    tomatoDark,
    redDark,
    crimsonDark,
    pinkDark,
    plumDark,
    purpleDark,
    violetDark,
    indigoDark,
    blueDark,
    skyDark,
    mintDark,
    cyanDark,
    tealDark,
    greenDark,
    grassDark,
    limeDark,
    yellowDark,
    amberDark,
    orangeDark,
    brownDark,
    bronzeDark,
    goldDark,
    grayDarkA,
    mauveDarkA,
    slateDarkA,
    sageDarkA,
    oliveDarkA,
    sandDarkA,
    tomatoDarkA,
    redDarkA,
    crimsonDarkA,
    pinkDarkA,
    plumDarkA,
    purpleDarkA,
    violetDarkA,
    indigoDarkA,
    blueDarkA,
    skyDarkA,
    mintDarkA,
    cyanDarkA,
    tealDarkA,
    greenDarkA,
    grassDarkA,
    limeDarkA,
    yellowDarkA,
    amberDarkA,
    orangeDarkA,
    brownDarkA,
    bronzeDarkA,
    goldDarkA,
} from "@radix-ui/colors";

export const { styled, css, keyframes, config } = createStitches({
    theme: {
        colors: {
            ...gray,
            ...mauve,
            ...slate,
            ...sage,
            ...olive,
            ...sand,
            ...tomato,
            ...red,
            ...crimson,
            ...pink,
            ...plum,
            ...purple,
            ...violet,
            ...indigo,
            ...blue,
            ...sky,
            ...mint,
            ...cyan,
            ...teal,
            ...green,
            ...grass,
            ...lime,
            ...yellow,
            ...amber,
            ...orange,
            ...brown,
            ...bronze,
            ...gold,

            ...grayA,
            ...mauveA,
            ...slateA,
            ...sageA,
            ...oliveA,
            ...sandA,
            ...tomatoA,
            ...redA,
            ...crimsonA,
            ...pinkA,
            ...plumA,
            ...purpleA,
            ...violetA,
            ...indigoA,
            ...blueA,
            ...skyA,
            ...mintA,
            ...cyanA,
            ...tealA,
            ...greenA,
            ...grassA,
            ...limeA,
            ...yellowA,
            ...amberA,
            ...orangeA,
            ...brownA,
            ...bronzeA,
            ...goldA,
            ...whiteA,
            ...blackA,
            primary: '$violet11',
        },

        shadows: {
            subtle: "0px 1px 2px rgba(20, 20, 0, 0.051)",
            sm: "0px 1px 2px rgba(0, 0, 0, 0.04)",
            focusRing: `0 0 0 4px ${violetA.violetA4}`,
            focusRingError: `0 0 0 4px ${tomatoA.tomatoA4}`,
            focusRingValid: `0 0 0 4px ${greenA.greenA4}`,

        },

        fontSizes: {
            1: "0.50rem",
            2: "0.75rem",
            3: "0.875rem",
            4: "1rem",
            5: "1.125rem",
            6: "1.25rem",
            7: "1.5rem",
            8: "1.875rem",
            9: "2.25rem",
            10: "3rem",
            11: "3.75rem",
            12: "4.5rem",
            13: "6rem",
            14: "8rem",
        },

        lineHeights: {
            normal: "normal",
            none: 1,
            shorter: 1.25,
            short: 1.375,
            base: 1.5,
            tall: 1.625,
            taller: "2",
            "3": ".75rem",
            "4": "1rem",
            "5": "1.25rem",
            "6": "1.5rem",
            "7": "1.75rem",
            "8": "2rem",
            "9": "2.25rem",
            "10": "2.5rem",
        },

        space: {
            px: '1px',
            0: '0',
            1: '0.25rem',
            2: '0.5rem',
            3: '0.75rem',
            4: '1rem',
            5: '1.25rem',
            6: '1.5rem',
            7: '1.75rem',
            8: '2rem',
            9: '2.25rem',
            10: '2.5rem',
            11: '2.75rem',
            12: '3rem',
            14: '3.5rem',
            16: '4rem',
            20: '5rem',
            24: '6rem',
            28: '7rem',
            32: '8rem',
            36: '9rem',
            40: '10rem',
            44: '11rem',
            48: '12rem',
            52: '13rem',
            56: '14rem',
            60: '15rem',
            64: '16rem',
            72: '18rem',
            80: '20rem',
            96: '24rem',
        },
    },

    utils: {
        p: (value: PropertyValue<"padding">) => ({ padding: value }),
        pt: (value: PropertyValue<"paddingTop">) => ({
            paddingTop: value,
        }),
        pr: (value: PropertyValue<"paddingRight">) => ({
            paddingRight: value,
        }),
        pb: (value: PropertyValue<"paddingBottom">) => ({
            paddingBottom: value,
        }),
        pl: (value: PropertyValue<"paddingLeft">) => ({
            paddingLeft: value,
        }),
        px: (value: PropertyValue<"paddingLeft">) => ({
            paddingLeft: value,
            paddingRight: value,
        }),
        py: (value: PropertyValue<"paddingTop">) => ({
            paddingTop: value,
            paddingBottom: value,
        }),

        size: (value: PropertyValue<"height">) => ({
            height: value,
            width: value,
        }),

        m: (value: PropertyValue<"margin">) => ({ margin: value }),
        mt: (value: PropertyValue<"marginTop">) => ({
            marginTop: value,
        }),
        mr: (value: PropertyValue<"marginRight">) => ({
            marginRight: value,
        }),
        mb: (value: PropertyValue<"marginBottom">) => ({
            marginBottom: value,
        }),
        ml: (value: PropertyValue<"marginLeft">) => ({
            marginLeft: value,
        }),
        mx: (value: PropertyValue<"marginLeft">) => ({
            marginLeft: value,
            marginRight: value,
        }),
        my: (value: PropertyValue<"marginTop">) => ({
            marginTop: value,
            marginBottom: value,
        }),
        appearance: (value: PropertyValue<"appearance">) => ({
            WebkitAppearance: value,
            appearance: value,
        }),
    }
});

export type _CSS = CSS<typeof config>